1- Python

   Django is a Python-based framework, so Python needs to be installed on your system.

   - Check if Python is installed:

     python --version

   - Or, for systems using Python 3 as default:

     python3 --version

   - Check if pip (Python package manager) is installed:

     pip --version
          or
     pip3 --version


   If Python or pip is not installed, you can install them via:

   - For Ubuntu/Debian-based systems:

     sudo apt update
     sudo apt install python3 python3-pip


(-------------------------------------------------------------------------)

2- Django

   Django is installed via pip in your Python environment.

   - Check if Django is installed:

     python -m django --version
                or
     python3 -m django --version

   - If Django is not installed, you can install it using:

     pip install django

(-------------------------------------------------------------------------)

3- Database (PostgreSQL/MySQL/SQLite)

   Django can work with multiple databases, but PostgreSQL and MySQL are most common in production. SQLite is the default database used during development.

   - Check if PostgreSQL is installed:

     psql --version

   - Check if MySQL is installed:

     mysql --version

   - Check if SQLite (default for Django) is installed: SQLite usually comes bundled with Python, but you can check its version:

     sqlite3 --version

   - Check PostgreSQL or MySQL service status:

     - For PostgreSQL:

       sudo systemctl status PostgreSQL

     - For MySQL:

       sudo systemctl status mysql

   If neither is installed, you can install them:

   - Install PostgreSQL:

     sudo apt-get install postgresql postgresql-contrib

   - Install MySQL:

     sudo apt-get install mysql-server

(-------------------------------------------------------------------------)

4- Gunicorn (Production Web Server)

   For production deployments, you typically use Gunicorn to serve Django apps instead of Django’s built-in development server.

   - Check if Gunicorn is installed:

     gunicorn --version

   If Gunicorn is not installed, you can install it via pip:

     pip install gunicorn

(-------------------------------------------------------------------------)

5- Web Server (Nginx/Apache)
   
   In production, Django apps are usually served behind a reverse proxy like Nginx or Apache. Here’s how to check if they’re installed.

   - Check if Nginx is installed:

     nginx -v

   - To check if the Nginx service is running:

     sudo systemctl status nginx

   - Check if Apache is installed (if using Apache instead of Nginx):

     apache2 -v

   - To check if the Apache service is running:

     sudo systemctl status apache2

   If neither is installed, you can install them:

   - Install Nginx:

     sudo apt-get install nginx

   - Install Apache:

     sudo apt-get install apache2

(-------------------------------------------------------------------------)

Summary of Prerequisite Commands for Django Stack

  python --version                  # Check Python version
  pip --version                     # Check pip version
  python -m django --version        # Check Django version
  psql --version                    # Check PostgreSQL version
  mysql --version                   # Check MySQL version
  sqlite3 --version                 # Check SQLite version
  sudo systemctl status postgresql  # Check PostgreSQL service status
  sudo systemctl status mysql       # Check MySQL service status
  gunicorn --version                # Check Gunicorn version
  nginx -v                          # Check Nginx version
  sudo systemctl status nginx       # Check Nginx service status
  apache2 -v                        # Check Apache version (if using Apache)
  sudo systemctl status apache2     # Check Apache service status (if using Apache)
  virtualenv --version              # Check if virtualenv is installed






  


